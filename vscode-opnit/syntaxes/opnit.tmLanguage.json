{
    "name": "Opnit",
    "scopeName": "source.opnit",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#types"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.number-sign.opnit",
                    "match": "#.*$"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "name": "keyword.control.opnit",
                    "match": "\\b(function|return)\\b"
                },
                {
                    "name": "constant.language.opnit",
                    "match": "\\b(true|false)\\b"
                }
            ]
        },
        "functions": {
            "patterns": [
                {
                    "name": "entity.name.function.opnit",
                    "match": "\\b(print|gettype)\\b"
                },
                {
                    "match": "\\b(function)\\s+([a-zA-Z_][a-zA-Z0-9_]*)\\s*\\(",
                    "captures": {
                        "1": {
                            "name": "keyword.control.opnit"
                        },
                        "2": {
                            "name": "entity.name.function.opnit"
                        }
                    }
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.opnit",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.opnit",
                    "match": "\\\\."
                }
            ]
        },
        "numbers": {
            "patterns": [
                {
                    "name": "constant.numeric.opnit",
                    "match": "\\b\\d+(\\.\\d+)?\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.opnit",
                    "match": "[+\\-*/]"
                },
                {
                    "name": "keyword.operator.assignment.opnit",
                    "match": "="
                },
                {
                    "name": "keyword.operator.type.opnit",
                    "match": ":"
                }
            ]
        },
        "types": {
            "patterns": [
                {
                    "name": "support.type.opnit",
                    "match": "\\b(number|string|boolean)\\b"
                }
            ]
        }
    }
} 